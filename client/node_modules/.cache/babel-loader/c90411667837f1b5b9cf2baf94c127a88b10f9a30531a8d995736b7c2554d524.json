{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { createUser, updateUser } from \"../../redux/user/userSlice\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { TextField, Button } from \"@material-ui/core\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiTextField-root\": {\n//       margin: theme.spacing(1),\n//       width: \"25ch\",\n//     },\n//   },\n// }));\n\n// function UserForm({ user = null, onClose }) {\n//   const dispatch = useDispatch();\n//   const classes = useStyles();\n//   const [formData, setFormData] = useState({\n//     username: user ? user.username : \"\",\n//     email: user ? user.email : \"\",\n//     phoneNumber: user ? user.phoneNumber : \"\",\n//     skillsets: user ? user.skillsets.join(\", \") : \"\",\n//     hobby: user ? user.hobby : \"\",\n//   });\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const { username, email, phoneNumber, skillsets, hobby } = formData;\n//     const userData = {\n//       username,\n//       email,\n//       phoneNumber,\n//       skillsets: skillsets.split(\",\").map((skill) => skill.trim()),\n//       hobby,\n//     };\n//     if (user) {\n//       dispatch(updateUser({ id: user.id, userData }));\n//     } else {\n//       dispatch(createUser(userData));\n//     }\n//     onClose();\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   return (\n//     <form className={classes.root} onSubmit={handleSubmit}>\n//       <TextField\n//         name=\"username\"\n//         label=\"Username\"\n//         value={formData.username}\n//         onChange={handleChange}\n//         required\n//       />\n//       <TextField\n//         name=\"email\"\n//         label=\"Email\"\n//         type=\"email\"\n//         value={formData.email}\n//         onChange={handleChange}\n//         required\n//       />\n//       <TextField\n//         name=\"phoneNumber\"\n//         label=\"Phone number\"\n//         value={formData.phoneNumber}\n//         onChange={handleChange}\n//         required\n//       />\n//       <TextField\n//         name=\"skillsets\"\n//         label=\"Skillsets (comma separated)\"\n//         value={formData.skillsets}\n//         onChange={handleChange}\n//         required\n//       />\n//       <TextField\n//         name=\"hobby\"\n//         label=\"Hobby\"\n//         value={formData.hobby}\n//         onChange={handleChange}\n//         required\n//       />\n//       <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n//         {user ? \"Update\" : \"Create\"}\n//       </Button>\n//       <Button onClick={onClose} variant=\"contained\" color=\"secondary\">\n//         Cancel\n//       </Button>\n//     </form>\n//   );\n// }\n\n// export default UserForm;","map":{"version":3,"names":[],"sources":["/Users/ahmeddawod/Desktop/assessment/client/src/components/UserForm/UserForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { createUser, updateUser } from \"../../redux/user/userSlice\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { TextField, Button } from \"@material-ui/core\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiTextField-root\": {\n//       margin: theme.spacing(1),\n//       width: \"25ch\",\n//     },\n//   },\n// }));\n\n// function UserForm({ user = null, onClose }) {\n//   const dispatch = useDispatch();\n//   const classes = useStyles();\n//   const [formData, setFormData] = useState({\n//     username: user ? user.username : \"\",\n//     email: user ? user.email : \"\",\n//     phoneNumber: user ? user.phoneNumber : \"\",\n//     skillsets: user ? user.skillsets.join(\", \") : \"\",\n//     hobby: user ? user.hobby : \"\",\n//   });\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const { username, email, phoneNumber, skillsets, hobby } = formData;\n//     const userData = {\n//       username,\n//       email,\n//       phoneNumber,\n//       skillsets: skillsets.split(\",\").map((skill) => skill.trim()),\n//       hobby,\n//     };\n//     if (user) {\n//       dispatch(updateUser({ id: user.id, userData }));\n//     } else {\n//       dispatch(createUser(userData));\n//     }\n//     onClose();\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   return (\n//     <form className={classes.root} onSubmit={handleSubmit}>\n//       <TextField\n//         name=\"username\"\n//         label=\"Username\"\n//         value={formData.username}\n//         onChange={handleChange}\n//         required\n//       />\n//       <TextField\n//         name=\"email\"\n//         label=\"Email\"\n//         type=\"email\"\n//         value={formData.email}\n//         onChange={handleChange}\n//         required\n//       />\n//       <TextField\n//         name=\"phoneNumber\"\n//         label=\"Phone number\"\n//         value={formData.phoneNumber}\n//         onChange={handleChange}\n//         required\n//       />\n//       <TextField\n//         name=\"skillsets\"\n//         label=\"Skillsets (comma separated)\"\n//         value={formData.skillsets}\n//         onChange={handleChange}\n//         required\n//       />\n//       <TextField\n//         name=\"hobby\"\n//         label=\"Hobby\"\n//         value={formData.hobby}\n//         onChange={handleChange}\n//         required\n//       />\n//       <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n//         {user ? \"Update\" : \"Create\"}\n//       </Button>\n//       <Button onClick={onClose} variant=\"contained\" color=\"secondary\">\n//         Cancel\n//       </Button>\n//     </form>\n//   );\n// }\n\n// export default UserForm;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}